image: node:latest

before_script:
  - npm ci --cache .npm --prefer-offline

stages:
  - setup
  - build-dev
  - build-prod
  - deploy-dev
  - deploy-prod

setup:
  stage: setup
  script:
    - npm install
  except:
    - master

build dev:
  stage: build-dev
  script:
    - npm install @angular/cli
    - ./node_modules/.bin/ng build --configuration=dev
  artifacts:
    expire_in: 1 hr
    paths:
      - dist/*
  only:
    - dev-release

build prod:
  stage: build-prod
  script:
    - npm install @angular/cli
    - ./node_modules/.bin/ng build --prod --build-optimizer
  artifacts:
    expire_in: 1 hr
    paths:
      - dist/*
  only:
    - staging-release

deploy to dev:
  stage: deploy-dev
  variables:
    TARGET_NAME: dev
    SITE_ID: dev-homeappter
  script:
    - npm install -g firebase-tools
    - npm install
    - firebase use --add homeappter --token $FIREBASE_TOKEN
    - firebase target:apply hosting $TARGET_NAME $SITE_ID
    - firebase deploy --token $FIREBASE_TOKEN --only hosting:$TARGET_NAME
  only:
    - dev-release

deploy to prod:
  stage: deploy-prod
  variables:
    TARGET_NAME: staging
    SITE_ID: homeappter
  script:
    - npm install -g firebase-tools
    - npm install
    - firebase use --add homeappter --token $FIREBASE_TOKEN
    - firebase target:apply hosting $TARGET_NAME $SITE_ID
    - firebase deploy --token $FIREBASE_TOKEN --only hosting:$TARGET_NAME
  only:
    - staging-release

cache:
  paths:
    - node_modules/

